
- name: Patch OpenTelemetry Demo Environment Variables for Instana Agent
  hosts:
    - environment
  tags:
    - patch_envs
    - otel_demo
  pre_tasks:
    - name: Import system role
      ansible.builtin.import_role:
        name: system
      tags:
        - always
      vars:
        system_cluster:
          kubeconfig: "{{ cluster.kubeconfig }}"
  tasks:
    - name: Import leaderboard role
      ansible.builtin.import_role:
        name: leaderboard
      vars:
        leaderboard_status:
          status: progressing
        leaderboard_storage: "{{ storage }}"

    - name: Attempt to patch OpenTelemetry Demo environment variables
      block:
        - name: Check if OpenTelemetry Demo is deployed
          kubernetes.core.k8s_info:
            kubeconfig: "{{ cluster.kubeconfig }}"
            kind: Deployment
            namespace: otel-demo
            name: frontend
          register: otel_demo_check
          failed_when: otel_demo_check.resources | length == 0
          
        - name: Check if Instana agent is deployed
          kubernetes.core.k8s_info:
            kubeconfig: "{{ cluster.kubeconfig }}"
            kind: Service
            namespace: instana-agent
            name: instana-agent
          register: instana_agent_check
          failed_when: instana_agent_check.resources | length == 0
          
        - name: Check if patch_envs.sh exists
          ansible.builtin.stat:
            path: "{{ playbook_dir }}/../patch_envs.sh"
          register: patch_script

        - name: Fail if patch script doesn't exist
          ansible.builtin.fail:
            msg: "patch_envs.sh script not found at {{ playbook_dir }}/../patch_envs.sh"
          when: not patch_script.stat.exists

        - name: Make patch_envs.sh executable
          ansible.builtin.file:
            path: "{{ playbook_dir }}/../patch_envs.sh"
            mode: '0755'
          when: patch_script.stat.exists

        - name: Execute patch_envs.sh script
          ansible.builtin.shell: "{{ playbook_dir }}/../patch_envs.sh"
          environment:
            KUBECONFIG: "{{ cluster.kubeconfig }}"
            NAMESPACE: "otel-demo"  # Ensure namespace is set correctly
          register: patch_result
          changed_when: true

        - name: Display patch script output
          ansible.builtin.debug:
            var: patch_result.stdout_lines
            
        - name: Verify patching was successful
          kubernetes.core.k8s_info:
            kubeconfig: "{{ cluster.kubeconfig }}"
            kind: Deployment
            namespace: otel-demo
            name: frontend
          register: frontend_deployment
          
        - name: Check if OTEL_EXPORTER_OTLP_ENDPOINT is set correctly
          ansible.builtin.debug:
            msg: "Patching successful: OTEL_EXPORTER_OTLP_ENDPOINT is set to http://instana-agent.instana-agent:4317"
          when: >
            frontend_deployment.resources[0].spec.template.spec.containers[0].env |
            selectattr('name', 'equalto', 'OTEL_EXPORTER_OTLP_ENDPOINT') |
            map(attribute='value') |
            select('match', 'http://instana-agent.instana-agent:4317') |
            list | length > 0

        - name: Import leaderboard role
          ansible.builtin.import_role:
            name: leaderboard
          vars:
            leaderboard_status:
              status: succeeded
            leaderboard_storage: "{{ storage }}"
      rescue:
        - name: Import leaderboard role
          ansible.builtin.import_role:
            name: leaderboard
          vars:
            leaderboard_status:
              failed_task:
                name: "{{ ansible_failed_task.name }}"
                result: "{{ ansible_failed_result }}"
              status: failed
            leaderboard_storage: "{{ storage }}"

        - name: Fail playbook
          ansible.builtin.fail:
            msg: Playbook failed to complete successfully. Please check log for more info.
          tags:
            - always

