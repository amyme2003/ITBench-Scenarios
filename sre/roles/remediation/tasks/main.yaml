---
# Tasks for Remediation role

- name: Install Python dependencies
  ansible.builtin.pip:
    requirements: "{{ role_path }}/files/requirements.txt"
    state: present
  tags:
    - setup

- name: Set environment variable for Instana API token
  ansible.builtin.set_fact:
    instana_env:
      INSTANA_API_TOKEN: "{{ instana_api_token }}"

- name: Create a modified version of the Remediation script for CLI execution
  ansible.builtin.copy:
    src: "{{ role_path }}/files/reemed_prc.py"
    dest: "{{ role_path }}/files/reemed_cli_runner.py"
    mode: '0755'

- name: Create artifacts directory
  ansible.builtin.file:
    path: "{{ playbook_dir }}/../artifacts"
    state: directory
    mode: '0755'

- name: Ensure the remediation script has execute permissions
  ansible.builtin.file:
    path: "{{ role_path }}/files/reemed_cli_runner.py"
    mode: '0755'

- name: Create empty JSON file as placeholder
  ansible.builtin.copy:
    content: '{"status": "processing", "message": "Remediation job started"}'
    dest: "{{ role_path }}/files/Remed_prc.json"
    mode: '0644'

- name: Run Remediation script to fetch data and trigger remediation
  ansible.builtin.command:
    cmd: python3 {{ role_path }}/files/reemed_cli_runner.py /trigger
  environment: "{{ instana_env }}"
  register: remediation_output
  changed_when: false
  async: 300
  poll: 10

- name: Check if output JSON file exists
  ansible.builtin.stat:
    path: "{{ role_path }}/files/Remed_prc.json"
  register: remediation_json_file

- name: Read Remediation JSON output
  ansible.builtin.slurp:
    src: "{{ role_path }}/files/Remed_prc.json"
  register: remediation_json_content
  when: remediation_json_file.stat.exists

- name: Set Remediation data as fact
  ansible.builtin.set_fact:
    remediation_data: "{{ remediation_json_content.content | b64decode | from_json if remediation_json_file.stat.exists else {} }}"
  when: remediation_json_file.stat.exists

- name: Debug Remediation data (pretty print)
  debug:
    msg: "{{ remediation_data | to_nice_json }}"
  when: remediation_json_file.stat.exists

- name: Set job artifact
  ansible.builtin.set_stats:
    data:
      remediation_data: "{{ remediation_data }}"
    per_host: false
  when: remediation_json_file.stat.exists

# Made with Bob
